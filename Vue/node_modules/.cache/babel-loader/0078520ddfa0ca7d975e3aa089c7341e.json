{"ast":null,"code":"import { createApp } from 'vue';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport App from './App.vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport router from './router';\nimport store from './store';\nconst app = createApp(App);\napp.use(VueAxios, axios);\napp.use(ElementPlus);\napp.use(store).use(router).mount('#app');\nconst instance = axios.create(config); // 3. 配置信息\n\nlet config = {\n  // 每次请求的协议、IP地址。  设置该配置后，每次请求路径都可以使用相对路径，例如\"/admin/login\"\n  baseURL: \"http://localhost:8081\",\n  // 请求超时时间\n  timeout: 10000 // 每次请求携带cookie\n\n};\ninstance.interceptors.request.use(config => {\n  /* 判断token是否存在和是否需要token验证的路由 */\n  let token = localStorage.getItem('Authorization') || '';\n  config.headers.token = token;\n  return config;\n});\ninstance.interceptors.response.use(response => {}, err => {\n  /*判断一下未授权 */\n  alert(\"权限不足，无法访问\"); // clearHandler();\n}); // 用来清空localStoreage 和 vuex里面的内容\n// 4. 导出\n\nexport default instance;","map":{"version":3,"sources":["D:/fdu/software_engineering/Lab/5-Lab2/Vue/src/main.js"],"names":["createApp","ElementPlus","App","axios","VueAxios","router","store","app","use","mount","instance","create","config","baseURL","timeout","interceptors","request","token","localStorage","getItem","headers","response","err","alert"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,6BAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,GAAG,GAAGP,SAAS,CAACE,GAAD,CAArB;AACAK,GAAG,CAACC,GAAJ,CAAQJ,QAAR,EAAkBD,KAAlB;AACAI,GAAG,CAACC,GAAJ,CAAQP,WAAR;AAEAM,GAAG,CAACC,GAAJ,CAAQF,KAAR,EAAeE,GAAf,CAAmBH,MAAnB,EAA2BI,KAA3B,CAAiC,MAAjC;AAEA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAaC,MAAb,CAAjB,C,CAEA;;AACA,IAAIA,MAAM,GAAG;AACT;AACAC,EAAAA,OAAO,EAAE,uBAFA;AAGT;AACAC,EAAAA,OAAO,EAAE,KAJA,CAKT;;AALS,CAAb;AASAJ,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BR,GAA9B,CAAkCI,MAAM,IAAI;AACxC;AACA,MAAIK,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,KAAyC,EAArD;AACAP,EAAAA,MAAM,CAACQ,OAAP,CAAeH,KAAf,GAAuBA,KAAvB;AACA,SAAOL,MAAP;AACH,CALD;AAOAF,QAAQ,CAACK,YAAT,CAAsBM,QAAtB,CAA+Bb,GAA/B,CAAmCa,QAAQ,IAAI,CAAE,CAAjD,EAAmDC,GAAG,IAAG;AACjD;AACAC,EAAAA,KAAK,CAAC,WAAD,CAAL,CAFiD,CAGjD;AACH,CAJL,E,CAMA;AAGA;;AACA,eAAeb,QAAf","sourcesContent":["import { createApp } from 'vue'\r\nimport ElementPlus from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\nimport App from './App.vue'\r\nimport axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\n\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nconst app = createApp(App)\r\napp.use(VueAxios, axios)\r\napp.use(ElementPlus)\r\n\r\napp.use(store).use(router).mount('#app')\r\n\r\nconst instance = axios.create(config)\r\n\r\n// 3. 配置信息\r\nlet config = {\r\n    // 每次请求的协议、IP地址。  设置该配置后，每次请求路径都可以使用相对路径，例如\"/admin/login\"\r\n    baseURL: \"http://localhost:8081\",\r\n    // 请求超时时间\r\n    timeout: 10000,\r\n    // 每次请求携带cookie\r\n}\r\n\r\n\r\ninstance.interceptors.request.use(config => {\r\n    /* 判断token是否存在和是否需要token验证的路由 */\r\n    let token = localStorage.getItem('Authorization') || ''\r\n    config.headers.token = token;\r\n    return config;\r\n});\r\n\r\ninstance.interceptors.response.use(response => {}, err=> {\r\n        /*判断一下未授权 */\r\n        alert(\"权限不足，无法访问\")\r\n        // clearHandler();\r\n    });\r\n\r\n// 用来清空localStoreage 和 vuex里面的内容\r\n\r\n\r\n// 4. 导出\r\nexport default instance"]},"metadata":{},"sourceType":"module"}