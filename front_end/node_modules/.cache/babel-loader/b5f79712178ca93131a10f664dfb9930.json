{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"custom-tree-node\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_tree, {\n    data: this.collegeData,\n    \"node-key\": \"id\",\n    \"default-expand-all\": \"\",\n    props: this.defaultProps,\n    \"expand-on-click-node\": false,\n    class: \"el-tree-container\"\n  }, {\n    default: _withCtx(({\n      node,\n      data\n    }) => [_createElementVNode(\"span\", _hoisted_1, [_createElementVNode(\"span\", null, _toDisplayString(data.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"span\", null, [data.major ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      onClick: $event => $options.append(data)\n    }, \" 新增 \", 8\n    /* PROPS */\n    , _hoisted_2)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"a\", {\n      onClick: $event => $options.remove(node, data)\n    }, \" 删除 \", 8\n    /* PROPS */\n    , _hoisted_3)])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\", \"props\"])]);\n}","map":{"version":3,"mappings":";;AAWcA,OAAK,EAAC;;;;;;;uBAVlBC,oBAmBM,KAnBN,EAmBM,IAnBN,EAmBM,CAlBJC,aAiBUC,kBAjBV,EAiBU;AAhBPC,QAAI,OAAOC,WAgBJ;AAfR,gBAAS,IAeD;AAdR,4BAcQ;AAbPC,SAAK,OAAOC,YAaL;AAZP,4BAAsB,KAYf;AAXRP,SAAK,EAAC;AAWE,GAjBV;AAQaQ,WAAO,WAChB,CAMO;AAPaC,UAOb;AAPmBL;AAOnB,KANP,KAD8B,CAC9BM,oBAMO,MANP,cAMO,CALLA,oBAA4B,MAA5B,EAA4B,IAA5B,EAA4BC,iBAAnBP,IAAI,CAACQ,IAAc,CAA5B,EAAkB;AAAA;AAAlB,KAKK,EAJLF,oBAGO,MAHP,EAGO,IAHP,EAGO,CAFIN,IAAI,CAACS,uBAAdZ,oBAAmD,GAAnD,EAAmD;YAAA;AAA7Ba,aAAK,YAAEC,gBAAOX,IAAP;AAAsB,KAAnD,EAA2C,MAA3C,EAA+C;AAAA;AAA/C,MAA+CY,UAA/C,sCAEK,EADLN,oBAAuC,GAAvC,EAAuC;AAAnCI,aAAK,YAAEC,gBAAON,IAAP,EAAaL,IAAb;AAA4B,KAAvC,EAA+B,MAA/B,EAAmC;AAAA;AAAnC,MAAmCa,UAAnC,CACK,CAHP,CAIK,CANP,CAD8B,CAAd;;;;GARpB;;AAAA,sBAkBI,CAnBN","names":["class","_createElementBlock","_createVNode","_component_el_tree","data","collegeData","props","defaultProps","default","node","_createElementVNode","_toDisplayString","name","major","onClick","$options","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["D:\\fdu\\software_engineering\\Lab\\5-Lab\\front_end\\src\\components\\MajorMaintenance.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <el-tree\r\n      :data=\"this.collegeData\"\r\n      node-key=\"id\"\r\n      default-expand-all\r\n      :props=\"this.defaultProps\" \r\n      :expand-on-click-node=\"false\"\r\n      class=\"el-tree-container\"\r\n    >\r\n      <template #default=\"{ node, data }\">\r\n        <span class=\"custom-tree-node\">\r\n          <span>{{ data.name }}</span>\r\n          <span>\r\n            <a v-if=\"data.major\" @click=\"append(data)\"> 新增 </a>\r\n            <a @click=\"remove(node, data)\"> 删除 </a>\r\n          </span>\r\n        </span>\r\n      </template>\r\n    </el-tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// import axios from 'axios'\r\nexport default {\r\n  name: 'MajorMaintenance',\r\n  data() {\r\n    return { \r\n      id: 100,\r\n      defaultProps: {\r\n        children: 'major',\r\n        label: 'name',\r\n      },\r\n      collegeData: [\r\n        { \r\n          id: 1,\r\n          name: '计算机科学技术学院', \r\n          major: [\r\n              {id: 1, name: '大数据'},\r\n              {id: 2, name: '信息安全'}\r\n          ]\r\n        },\r\n        { \r\n          id: 2,\r\n          name: '生命科学学院', \r\n          major: [\r\n              {id: 1, name: '生物'},\r\n              {id: 2, name: '123'}\r\n          ]\r\n        },\r\n        { \r\n          id: 3,\r\n          name: '软件工程学院', \r\n          major: [\r\n              {id: 1, name: '软件工程'},\r\n          ]\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    append(data) {\r\n      const newChild = { id: this.id++, name: '新的专业'}\r\n      if (!data.major) {\r\n        data.major = []\r\n      }\r\n      data.major.push(newChild)\r\n      console.log(this.collegeData)\r\n      this.collegeData = [...this.collegeData]//更新数据，刷新页面\r\n    },\r\n\r\n    remove(node, data) {\r\n      const parent = node.parent\r\n      const children = parent.data.major || parent.data\r\n      const index = children.findIndex((d) => d.id === data.id)\r\n      children.splice(index, 1)\r\n      this.collegeData = [...this.collegeData]\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.el-tree-container{\r\n  width:500px;\r\n  margin-left: 150px;\r\n}\r\n.el-tree-node__expand-icon{\r\n  width:300px;\r\n  max-height: 12px;\r\n  margin-right:-140px;\r\n  transform: none !important;\r\n}\r\n.el-tree-node__expand-icon .expanded{\r\n  width:300px;\r\n  max-height: 12px;\r\n  transform: rotate(90deg);\r\n  margin-right:-150px;\r\n  position: relative;\r\n  transform: none !important;\r\n}\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}