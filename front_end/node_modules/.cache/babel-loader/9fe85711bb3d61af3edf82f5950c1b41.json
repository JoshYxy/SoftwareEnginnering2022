{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"margin-right\": \"250px\"\n  }\n}, \"专业信息管理\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" 新增学院 \");\n\nconst _hoisted_3 = {\n  class: \"custom-tree-node\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.appendCollege())\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_el_tree, {\n    data: this.collegeData,\n    \"default-expand-all\": \"\",\n    props: this.defaultProps,\n    \"expand-on-click-node\": false,\n    class: \"el-tree-container\"\n  }, {\n    default: _withCtx(({\n      node,\n      data\n    }) => [_createElementVNode(\"span\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString(data.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"span\", null, [data.majors ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      onClick: $event => $options.append(node, data)\n    }, \" 新增专业 \", 8\n    /* PROPS */\n    , _hoisted_4)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"a\", {\n      onClick: $event => $options.openAlter(node, data)\n    }, \" 修改 \", 8\n    /* PROPS */\n    , _hoisted_5), _createElementVNode(\"a\", {\n      onClick: $event => $options.openRemove(node, data)\n    }, \" 删除 \", 8\n    /* PROPS */\n    , _hoisted_6)])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\", \"props\"])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAA0C,IAA1C,EAA0C;AAAtCC,OAA0B,EAA1B;AAAA;AAAA;AAAsC,CAA1C,EAA+B,QAA/B,EAAqC;AAAA;AAArC;;iDACmD;;;AAUzCC,OAAK,EAAC;;;;;;;;;;uBAZlBC,oBAuBM,KAvBN,EAuBM,IAvBN,EAuBM,CAtBJC,UAsBI,EArBJC,aAAqEC,oBAArE,EAAqE;AAA1DC,QAAI,EAAC,SAAqD;AAA1CC,WAAK,sCAAEC,wBAAF;AAAqC,GAArE;sBAAmD,MAAM;;;;GAAzD,CAqBI,EApBJJ,aAmBUK,kBAnBV,EAmBU;AAlBPC,QAAI,OAAOC,WAkBJ;AAhBR,4BAgBQ;AAfPC,SAAK,OAAOC,YAeL;AAdP,4BAAsB,KAcf;AAbRZ,SAAK,EAAC;AAaE,GAnBV;AAQaa,WAAO,WAChB,CAQO;AATaC,UASb;AATmBL;AASnB,KARP,KAD8B,CAC9BX,oBAQO,MARP,cAQO,CAPLA,oBAA4B,MAA5B,EAA4B,IAA5B,EAA4BiB,iBAAnBN,IAAI,CAACO,IAAc,CAA5B,EAAkB;AAAA;AAAlB,KAOK,EANLlB,oBAKO,MALP,EAKO,IALP,EAKO,CAJIW,IAAI,CAACQ,wBAAdhB,oBAA4D,GAA5D,EAA4D;YAAA;AAArCK,aAAK,YAAEC,gBAAOO,IAAP,EAAaL,IAAb;AAA8B,KAA5D,EAAkD,QAAlD,EAAwD;AAAA;AAAxD,MAAwDS,UAAxD,sCAIK,EAFLpB,oBAA0C,GAA1C,EAA0C;AAAtCQ,aAAK,YAAEC,mBAAUO,IAAV,EAAgBL,IAAhB;AAA+B,KAA1C,EAAkC,MAAlC,EAAsC;AAAA;AAAtC,MAAsCU,UAAtC,CAEK,EADLrB,oBAA2C,GAA3C,EAA2C;AAAvCQ,aAAK,YAAEC,oBAAWO,IAAX,EAAiBL,IAAjB;AAAgC,KAA3C,EAAmC,MAAnC,EAAuC;AAAA;AAAvC,MAAuCW,UAAvC,CACK,CALP,CAMK,CARP,CAD8B,CAAd;;;;GARpB;;AAAA,sBAoBI,CAvBN","names":["_createElementVNode","style","class","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","type","onClick","$options","_component_el_tree","data","collegeData","props","defaultProps","default","node","_toDisplayString","name","majors","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["D:\\fdu\\software_engineering\\Lab\\5-Lab\\front_end\\src\\components\\MajorMaintenance.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <h2 style=\"margin-right:250px\">专业信息管理</h2>\r\n    <el-button type='primary' @click=\"appendCollege()\"> 新增学院 </el-button>\r\n    <el-tree\r\n      :data=\"this.collegeData\"\r\n    \r\n      default-expand-all\r\n      :props=\"this.defaultProps\" \r\n      :expand-on-click-node=\"false\"\r\n      class=\"el-tree-container\"\r\n    >\r\n      <template #default=\"{ node, data }\">\r\n        <span class=\"custom-tree-node\">\r\n          <span>{{ data.name }}</span>\r\n          <span>\r\n            <a v-if=\"data.majors\" @click=\"append(node, data)\"> 新增专业 </a>\r\n     \r\n            <a @click=\"openAlter(node, data)\"> 修改 </a>\r\n            <a @click=\"openRemove(node, data)\"> 删除 </a>\r\n          </span>\r\n        </span>\r\n      </template>\r\n    </el-tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'MajorMaintenance',\r\n  data() {\r\n    return { \r\n      id: 0,\r\n      visible: false,\r\n      defaultProps: {\r\n        children: 'majors',\r\n        label: 'name',\r\n      },\r\n      collegeData: [\r\n        {\r\n          id:0,\r\n          name:'1',\r\n          majors:{id:1,name:'2'}\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    setId() {//根据数据库中“新的学院xx”“新的专业xx”后的数字设置id，避免名称重复\r\n      for(let i of this.collegeData)\r\n      {\r\n        if(i.name.indexOf('新的学院') > -1) this.id = Math.max(this.id, parseInt(i.name.substr(4)))\r\n        for(let j of i.majors) {\r\n          if(j.name.indexOf('新的专业') > -1) this.id = Math.max(this.id, parseInt(j.name.substr(4)))\r\n        }\r\n        // this.id = Math.max(this.id, i.name.slice(9))\r\n      }\r\n      // console.log(this.id)\r\n    },\r\n    appendCollege() {\r\n      const data = {id: this.id++, name: '新的学院'+this.id, majors:[]}\r\n      \r\n      axios.post('http://localhost:8081/admin/edu/college/new',{name: data.name})\r\n        .then(res => {\r\n          console.log(res)\r\n       \r\n          // this.collegeData.push(data)\r\n          // this.openAlter(data)\r\n        }).catch(error => {\r\n          alert(\"学院名称重复\")\r\n          console.dir(error);\r\n        });\r\n      \r\n    },\r\n    append(node, data) {\r\n      const newChild = { id: this.id++, name: '新的专业'+this.id}\r\n      if (!data.majors) {\r\n        data.majors = []\r\n      }\r\n      axios.post('http://localhost:8081/admin/edu/major/new',{collegeName: data.name, name: newChild.name})\r\n        .then(res => {\r\n          console.log(res)\r\n          newChild.id = res.data.data\r\n          data.majors.push(newChild)\r\n          this.openAlter(node, newChild)\r\n          this.collegeData = [...this.collegeData]//更新数据，刷新页面\r\n        }).catch(error => {\r\n          alert(\"专业名称重复\")\r\n          console.dir(error);\r\n        });\r\n      \r\n    },\r\n    alter(data, name) {\r\n      data.name=name;\r\n      //TODO:axios\r\n      this.collegeData = [...this.collegeData]\r\n    },\r\n    remove(node, data) {\r\n      //TODO:axios\r\n      const parent = node.parent\r\n      console.log(parent)\r\n      const children = parent.data.majors || parent.data\r\n      const index = children.findIndex((d) => d.id === data.id)\r\n      children.splice(index, 1)\r\n      this.collegeData = [...this.collegeData]\r\n    },\r\n    openRemove(node, data) {\r\n      ElMessageBox.confirm(\r\n        '是否删除 ' + data.name + (data.majors?\"\":\"专业\"),\r\n        'Warning',\r\n        {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      )\r\n        .then(() => {\r\n          if(data.majors) { //删除学院\r\n            axios.delete('http://localhost:8081/admin/edu/college',{data: {collegeId: data.id, name: data.name}})//delete传参需多裹一层{data:}\r\n              .then(res => {\r\n                console.log(res)\r\n                this.remove(node, data)\r\n                ElMessage({type: 'success', message: `删除成功`})\r\n              }).catch(error => {\r\n                ElMessage.error('删除失败')\r\n                console.dir(error);\r\n              });\r\n          }\r\n          else {\r\n            axios.delete('http://localhost:8081/admin/edu/major',{data:{majorId: data.id, name: data.name, collegeName: node.parent.data.name}})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.remove(node, data)\r\n                ElMessage({type: 'success', message: `删除成功`})\r\n              }).catch(error => {\r\n                ElMessage.error('删除失败')\r\n                console.dir(error);\r\n              });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage({\r\n            type: 'info',\r\n            message: '删除取消',\r\n          })\r\n        })\r\n    },\r\n    openAlter(node, data) {\r\n      const alertMessage='请输入新的'+(data.majors?'学院':'专业')+'名称'\r\n      ElMessageBox.prompt(alertMessage, '修改', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n      })\r\n        .then(({ value }) => {\r\n          if(data.majors) {//修改学院\r\n            axios.post('http://localhost:8081/admin/edu/college',{collegeId: data.id, name: value})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.alter(data, value)\r\n                ElMessage({type: 'success', message: `修改成功`})\r\n              }).catch(error => {\r\n                if(error.response.status == 428){\r\n                  ElMessage.error('学院名称重复')\r\n                }\r\n                console.dir(error);\r\n              });\r\n          }\r\n          else { //修改专业\r\n            axios.post('http://localhost:8081/admin/edu/major',{majorId: data.id, name: value, collegeName: node.parent.data.name})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.alter(data, value)\r\n                ElMessage({type: 'success', message: `修改成功`})\r\n              }).catch(error => {\r\n                if(error.response.status == 429)\r\n                  ElMessage.error('专业名称重复')\r\n                \r\n                console.dir(error);\r\n              });        \r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage({\r\n            type: 'info',\r\n            message: '修改取消',\r\n          })\r\n        })\r\n    }\r\n   \r\n  },\r\n  async created() {\r\n    await axios.get(\"http://localhost:8081/admin/edu\")\r\n      .then(res => {\r\n        this.collegeData = res.data.data\r\n        for(let i in this.collegeData) {//替换变量名,对应后端数据\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOId/g,\"id\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorId/g,\"id\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOName/g,\"name\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorName/g,\"name\"))\r\n          \r\n        }\r\n      }).catch(error => {\r\n        alert('获取服务器信息失败')\r\n        console.dir(error);\r\n      });\r\n    this.setId()\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.el-tree-container{\r\n  width:600px;\r\n  margin-left: 150px;\r\n\r\n}\r\n.el-tree-node__expand-icon{\r\n  width:300px;\r\n  max-height: 12px;\r\n  margin-right:-140px;\r\n  transform: none !important;\r\n}\r\n.el-tree-node__expand-icon .expanded{\r\n  width:300px;\r\n  max-height: 12px;\r\n  transform: rotate(90deg);\r\n  margin-right:-150px;\r\n  position: relative;\r\n  transform: none !important;\r\n}\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;  \r\n  font-size: 16px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}