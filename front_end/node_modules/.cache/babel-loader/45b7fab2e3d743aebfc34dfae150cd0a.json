{"ast":null,"code":"/* eslint-disable */\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  name: 'MajorMaintenance',\n\n  data() {\n    return {\n      id: 26,\n      visible: false,\n      defaultProps: {\n        children: 'majors',\n        label: 'name'\n      },\n      collegeData: [{\n        id: 0,\n        name: '1',\n        majors: {\n          id: 1,\n          name: '2'\n        }\n      }]\n    };\n  },\n\n  methods: {\n    setId() {\n      //根据数据库中“新的学院xx”“新的专业xx”后的数字设置id，避免名称重复\n      for (let i of this.collegeData) {\n        if (i.name.indexOf('新的学院') > -1) this.id = Math.max(this.id, parseInt(i.name.substr(4)));\n\n        for (let j of i.majors) {\n          if (j.name.indexOf('新的专业') > -1) this.id = Math.max(this.id, parseInt(j.name.substr(4)));\n        } // this.id = Math.max(this.id, i.name.slice(9))\n\n      } // console.log(this.id)\n\n    },\n\n    appendCollege() {\n      const data = {\n        id: this.id++,\n        name: '新的学院' + this.id,\n        majors: []\n      };\n      axios.post('http://localhost:8081/admin/edu/college/new', {\n        name: data.name\n      }).then(res => {\n        console.log(res);\n        this.collegeData.push(data);\n        this.openAlter(data);\n      }).catch(error => {\n        alert(\"学院名称重复\");\n        console.dir(error);\n      });\n    },\n\n    append(data) {\n      const newChild = {\n        id: this.id++,\n        name: '新的专业' + this.id\n      };\n\n      if (!data.majors) {\n        data.majors = [];\n      }\n\n      axios.post('http://localhost:8081/admin/edu/major/new', {\n        collegeName: data.name,\n        name: newChild.name\n      }).then(res => {\n        console.log(res);\n        data.majors.push(newChild);\n        this.openAlter(newChild);\n        this.collegeData = [...this.collegeData]; //更新数据，刷新页面\n      }).catch(error => {\n        alert(\"专业名称重复\");\n        console.dir(error);\n      });\n    },\n\n    alter(data, name) {\n      data.name = name; //TODO:axios\n\n      this.collegeData = [...this.collegeData];\n    },\n\n    remove(node, data) {\n      //TODO:axios\n      const parent = node.parent;\n      console.log(parent);\n      const children = parent.data.majors || parent.data;\n      const index = children.findIndex(d => d.id === data.id);\n      children.splice(index, 1);\n      this.collegeData = [...this.collegeData];\n    },\n\n    openRemove(node, data) {\n      ElMessageBox.confirm('是否删除 ' + data.name + (data.majors ? \"\" : \"专业\"), 'Warning', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        if (data.majors) {\n          //删除学院\n          axios.delete('http://localhost:8081/admin/edu/college', {\n            data: {\n              collegeId: data.id,\n              name: data.name\n            }\n          }) //delete传参需多裹一层{data:}\n          .then(res => {\n            console.log(res);\n            this.remove(node, data);\n            ElMessage({\n              type: 'success',\n              message: `删除成功`\n            });\n          }).catch(error => {\n            ElMessage.error('删除失败');\n            console.dir(error);\n          });\n        } else {\n          axios.delete('http://localhost:8081/admin/edu/major', {\n            data: {\n              majorId: data.id,\n              name: data.name,\n              collegeName: node.parent.name\n            }\n          }).then(res => {\n            console.log(res);\n            this.remove(node, data);\n            ElMessage({\n              type: 'success',\n              message: `删除成功`\n            });\n          }).catch(error => {\n            ElMessage.error('删除失败');\n            console.dir(error);\n          });\n        }\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '删除取消'\n        });\n      });\n    },\n\n    openAlter(node, data) {\n      const alertMessage = '请输入新的' + (data.majors ? '学院' : '专业') + '名称';\n      ElMessageBox.prompt(alertMessage, '修改', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消'\n      }).then(({\n        value\n      }) => {\n        if (data.majors) {\n          //修改学院\n          axios.post('http://localhost:8081/admin/edu/college', {\n            collegeId: data.id,\n            name: value\n          }).then(res => {\n            console.log(res);\n            this.alter(data, value);\n            ElMessage({\n              type: 'success',\n              message: `修改成功`\n            });\n          }).catch(error => {\n            if (error.response.status == 428) {\n              ElMessage.error('学院名称重复');\n            }\n\n            console.dir(error);\n          });\n        } else {\n          //修改专业\n          axios.post('http://localhost:8081/admin/edu/major', {\n            majorId: data.id,\n            name: value,\n            collegeName: node.parent.name\n          }).then(res => {\n            console.log(res);\n            this.alter(data, value);\n            ElMessage({\n              type: 'success',\n              message: `修改成功`\n            });\n          }).catch(error => {\n            if (error.response.status == 429) ElMessage.error('专业名称重复');\n            console.dir(error);\n          });\n        }\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '修改取消'\n        });\n      });\n    }\n\n  },\n\n  async created() {\n    await axios.get(\"http://localhost:8081/admin/edu\").then(res => {\n      this.collegeData = res.data.data;\n\n      for (let i in this.collegeData) {\n        //替换变量名,对应后端数据\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOId/g, \"id\"));\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorId/g, \"id\"));\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOName/g, \"name\"));\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorName/g, \"name\"));\n      }\n    }).catch(error => {\n      alert('获取服务器信息失败');\n      console.dir(error);\n    });\n    this.setId();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ElMessage","ElMessageBox","axios","name","data","id","visible","defaultProps","children","label","collegeData","majors","methods","setId","i","indexOf","Math","max","parseInt","substr","j","appendCollege","post","then","res","console","log","push","openAlter","catch","error","alert","dir","append","newChild","collegeName","alter","remove","node","parent","index","findIndex","d","splice","openRemove","confirm","confirmButtonText","cancelButtonText","type","delete","collegeId","message","majorId","alertMessage","prompt","value","response","status","created","get","JSON","parse","stringify","replace"],"sourceRoot":"","sources":["D:\\fdu\\software_engineering\\Lab\\5-Lab\\front_end\\src\\components\\MajorMaintenance.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <h2 style=\"margin-right:250px\">专业信息管理</h2>\r\n    <el-button type='primary' @click=\"appendCollege()\"> 新增学院 </el-button>\r\n    <el-tree\r\n      :data=\"this.collegeData\"\r\n    \r\n      default-expand-all\r\n      :props=\"this.defaultProps\" \r\n      :expand-on-click-node=\"false\"\r\n      class=\"el-tree-container\"\r\n    >\r\n      <template #default=\"{ node, data }\">\r\n        <span class=\"custom-tree-node\">\r\n          <span>{{ data.name }}</span>\r\n          <span>\r\n            <a v-if=\"data.majors\" @click=\"append(data)\"> 新增专业 </a>\r\n     \r\n            <a @click=\"openAlter(node, data)\"> 修改 </a>\r\n            <a @click=\"openRemove(node, data)\"> 删除 </a>\r\n          </span>\r\n        </span>\r\n      </template>\r\n    </el-tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'MajorMaintenance',\r\n  data() {\r\n    return { \r\n      id: 26,\r\n      visible: false,\r\n      defaultProps: {\r\n        children: 'majors',\r\n        label: 'name',\r\n      },\r\n      collegeData: [\r\n        {\r\n          id:0,\r\n          name:'1',\r\n          majors:{id:1,name:'2'}\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    setId() {//根据数据库中“新的学院xx”“新的专业xx”后的数字设置id，避免名称重复\r\n      for(let i of this.collegeData)\r\n      {\r\n        if(i.name.indexOf('新的学院') > -1) this.id = Math.max(this.id, parseInt(i.name.substr(4)))\r\n        for(let j of i.majors) {\r\n          if(j.name.indexOf('新的专业') > -1) this.id = Math.max(this.id, parseInt(j.name.substr(4)))\r\n        }\r\n        // this.id = Math.max(this.id, i.name.slice(9))\r\n      }\r\n      // console.log(this.id)\r\n    },\r\n    appendCollege() {\r\n      const data = {id: this.id++, name: '新的学院'+this.id, majors:[]}\r\n      \r\n      axios.post('http://localhost:8081/admin/edu/college/new',{name: data.name})\r\n        .then(res => {\r\n          console.log(res)\r\n          this.collegeData.push(data)\r\n          this.openAlter(data)\r\n        }).catch(error => {\r\n          alert(\"学院名称重复\")\r\n          console.dir(error);\r\n        });\r\n      \r\n    },\r\n    append(data) {\r\n      const newChild = { id: this.id++, name: '新的专业'+this.id}\r\n      if (!data.majors) {\r\n        data.majors = []\r\n      }\r\n      axios.post('http://localhost:8081/admin/edu/major/new',{collegeName: data.name, name: newChild.name})\r\n        .then(res => {\r\n          console.log(res)\r\n          data.majors.push(newChild)\r\n          this.openAlter(newChild)\r\n          this.collegeData = [...this.collegeData]//更新数据，刷新页面\r\n        }).catch(error => {\r\n          alert(\"专业名称重复\")\r\n          console.dir(error);\r\n        });\r\n      \r\n    },\r\n    alter(data, name) {\r\n      data.name=name;\r\n      //TODO:axios\r\n      this.collegeData = [...this.collegeData]\r\n    },\r\n    remove(node, data) {\r\n      //TODO:axios\r\n      const parent = node.parent\r\n      console.log(parent)\r\n      const children = parent.data.majors || parent.data\r\n      const index = children.findIndex((d) => d.id === data.id)\r\n      children.splice(index, 1)\r\n      this.collegeData = [...this.collegeData]\r\n    },\r\n    openRemove(node, data) {\r\n      ElMessageBox.confirm(\r\n        '是否删除 ' + data.name + (data.majors?\"\":\"专业\"),\r\n        'Warning',\r\n        {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      )\r\n        .then(() => {\r\n          if(data.majors) { //删除学院\r\n            axios.delete('http://localhost:8081/admin/edu/college',{data: {collegeId: data.id, name: data.name}})//delete传参需多裹一层{data:}\r\n              .then(res => {\r\n                console.log(res)\r\n                this.remove(node, data)\r\n                ElMessage({type: 'success', message: `删除成功`})\r\n              }).catch(error => {\r\n                ElMessage.error('删除失败')\r\n                console.dir(error);\r\n              });\r\n          }\r\n          else {\r\n            axios.delete('http://localhost:8081/admin/edu/major',{data:{majorId: data.id, name: data.name, collegeName: node.parent.name}})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.remove(node, data)\r\n                ElMessage({type: 'success', message: `删除成功`})\r\n              }).catch(error => {\r\n                ElMessage.error('删除失败')\r\n                console.dir(error);\r\n              });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage({\r\n            type: 'info',\r\n            message: '删除取消',\r\n          })\r\n        })\r\n    },\r\n    openAlter(node, data) {\r\n      const alertMessage='请输入新的'+(data.majors?'学院':'专业')+'名称'\r\n      ElMessageBox.prompt(alertMessage, '修改', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n      })\r\n        .then(({ value }) => {\r\n          if(data.majors) {//修改学院\r\n            axios.post('http://localhost:8081/admin/edu/college',{collegeId: data.id, name: value})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.alter(data, value)\r\n                ElMessage({type: 'success', message: `修改成功`})\r\n              }).catch(error => {\r\n                if(error.response.status == 428){\r\n                  ElMessage.error('学院名称重复')\r\n                }\r\n                console.dir(error);\r\n              });\r\n          }\r\n          else { //修改专业\r\n            axios.post('http://localhost:8081/admin/edu/major',{majorId: data.id, name: value, collegeName: node.parent.name})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.alter(data, value)\r\n                ElMessage({type: 'success', message: `修改成功`})\r\n              }).catch(error => {\r\n                if(error.response.status == 429)\r\n                  ElMessage.error('专业名称重复')\r\n                \r\n                console.dir(error);\r\n              });        \r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage({\r\n            type: 'info',\r\n            message: '修改取消',\r\n          })\r\n        })\r\n    }\r\n   \r\n  },\r\n  async created() {\r\n    await axios.get(\"http://localhost:8081/admin/edu\")\r\n      .then(res => {\r\n        this.collegeData = res.data.data\r\n        for(let i in this.collegeData) {//替换变量名,对应后端数据\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOId/g,\"id\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorId/g,\"id\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOName/g,\"name\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorName/g,\"name\"))\r\n          \r\n        }\r\n      }).catch(error => {\r\n        alert('获取服务器信息失败')\r\n        console.dir(error);\r\n      });\r\n    this.setId()\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.el-tree-container{\r\n  width:600px;\r\n  margin-left: 150px;\r\n\r\n}\r\n.el-tree-node__expand-icon{\r\n  width:300px;\r\n  max-height: 12px;\r\n  margin-right:-140px;\r\n  transform: none !important;\r\n}\r\n.el-tree-node__expand-icon .expanded{\r\n  width:300px;\r\n  max-height: 12px;\r\n  transform: rotate(90deg);\r\n  margin-right:-150px;\r\n  position: relative;\r\n  transform: none !important;\r\n}\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;  \r\n  font-size: 16px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}