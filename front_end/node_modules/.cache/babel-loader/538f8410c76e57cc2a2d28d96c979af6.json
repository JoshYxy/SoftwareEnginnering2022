{"ast":null,"code":"// // 配置 mock 文件\n// // 首先引入Mock\n// const Mock = require('mockjs');\n// // 设置拦截ajax请求的相应时间\n// Mock.setup({\n//     timeout: '200-600'\n// });\n// let configArray = [];\n// // 使用webpack的require.context()遍历所有mock文件\n// const files = require.context('.', true, /\\.js$/);\n// files.keys().forEach((key) => {\n//     if (key === './index.js') return;\n//     configArray = configArray.concat(files(key).default);\n// });\n// // 注册所有的mock服务\n// configArray.forEach((item) => {\n//     for (let [path, target] of Object.entries(item)) {\n//         let protocol = path.split('|');\n//         Mock.mock(new RegExp('^' + protocol[1]), protocol[0], target);\n//     }\n// });","map":{"version":3,"sources":["D:/fdu/software_engineering/Lab/5-Lab/front_end/src/mock/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// // 配置 mock 文件\r\n// // 首先引入Mock\r\n// const Mock = require('mockjs');\r\n\r\n// // 设置拦截ajax请求的相应时间\r\n// Mock.setup({\r\n//     timeout: '200-600'\r\n// });\r\n\r\n// let configArray = [];\r\n\r\n// // 使用webpack的require.context()遍历所有mock文件\r\n// const files = require.context('.', true, /\\.js$/);\r\n// files.keys().forEach((key) => {\r\n//     if (key === './index.js') return;\r\n//     configArray = configArray.concat(files(key).default);\r\n// });\r\n\r\n// // 注册所有的mock服务\r\n// configArray.forEach((item) => {\r\n//     for (let [path, target] of Object.entries(item)) {\r\n//         let protocol = path.split('|');\r\n//         Mock.mock(new RegExp('^' + protocol[1]), protocol[0], target);\r\n//     }\r\n// });"]},"metadata":{},"sourceType":"script"}