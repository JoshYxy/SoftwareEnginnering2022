{"ast":null,"code":"import { ElMessage, ElMessageBox } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  name: 'MajorMaintenance',\n\n  data() {\n    return {\n      id: 0,\n      visible: false,\n      defaultProps: {\n        children: 'majors',\n        label: 'name'\n      },\n      collegeData: []\n    };\n  },\n\n  methods: {\n    appendCollege() {\n      const data = {\n        id: this.id++,\n        name: '新的学院' + this.id,\n        majors: []\n      };\n      axios.post('http://localhost:8081/admin/edu/college/new', {\n        name: data.name\n      }).then(res => {\n        console.log(res);\n        this.collegeData.push(data);\n        this.openAlter(data);\n      }).catch(error => {\n        alert(\"学院名称重复\");\n        console.dir(error);\n      });\n    },\n\n    append(data) {\n      const newChild = {\n        id: this.id++,\n        name: '新的专业' + this.id\n      };\n\n      if (!data.majors) {\n        data.majors = [];\n      }\n\n      axios.post('http://localhost:8081/admin/edu/major/new', {\n        collegeName: data.name,\n        name: newChild.name\n      }).then(res => {\n        console.log(res);\n        data.majors.push(newChild);\n        this.openAlter(newChild);\n        this.collegeData = [...this.collegeData]; //更新数据，刷新页面\n      }).catch(error => {\n        alert(\"专业名称重复\");\n        console.dir(error);\n      });\n    },\n\n    alter(data, name) {\n      data.name = name; //TODO:axios\n\n      this.collegeData = [...this.collegeData];\n    },\n\n    remove(node, data) {\n      //TODO:axios\n      const parent = node.parent;\n      console.log(parent);\n      const children = parent.data.majors || parent.data;\n      const index = children.findIndex(d => d.id === data.id);\n      children.splice(index, 1);\n      this.collegeData = [...this.collegeData];\n    },\n\n    openRemove(node, data) {\n      ElMessageBox.confirm('是否删除 ' + data.name + (data.majors ? \"\" : \"专业\"), 'Warning', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        if (data.majors) {\n          //修改学院\n          axios.delete('http://localhost:8081/admin/edu/college', {\n            collegeId: data.id,\n            name: data.name\n          }).then(res => {\n            console.log(res);\n            this.remove(node, data);\n            ElMessage({\n              type: 'success',\n              message: `删除成功`\n            });\n          }).catch(error => {\n            ElMessage.error('删除失败');\n            console.dir(error);\n          });\n        } else {\n          axios.delete('http://localhost:8081/admin/edu/major', {\n            majorId: data.id,\n            name: data.name,\n            collegeName: node.parent.name\n          }).then(res => {\n            console.log(res);\n            this.remove(node, data);\n            ElMessage({\n              type: 'success',\n              message: `删除成功`\n            });\n          }).catch(error => {\n            ElMessage.error('删除失败');\n            console.dir(error);\n          });\n        }\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '删除取消'\n        });\n      });\n    },\n\n    openAlter(node, data) {\n      const alertMessage = '请输入新的' + (data.majors ? '学院' : '专业') + '名称';\n      ElMessageBox.prompt(alertMessage, '修改', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消'\n      }).then(({\n        value\n      }) => {\n        if (data.majors) {\n          //修改学院\n          axios.post('http://localhost:8081/admin/edu/college', {\n            collegeId: data.id,\n            name: value\n          }).then(res => {\n            console.log(res);\n            this.alter(data, value);\n            ElMessage({\n              type: 'success',\n              message: `修改成功`\n            });\n          }).catch(error => {\n            if (error.response.status == 426) ElMessage.error('学院名称重复');\n            console.dir(error);\n          });\n        } else {\n          //修改专业\n          axios.post('http://localhost:8081/admin/edu/major', {\n            majorId: data.id,\n            name: value,\n            collegeName: node.parent.name\n          }).then(res => {\n            console.log(res);\n            this.alter(data, value);\n            ElMessage({\n              type: 'success',\n              message: `修改成功`\n            });\n          }).catch(error => {\n            if (error.response.status == 426) ElMessage.error('专业名称重复');\n            console.dir(error);\n          });\n        }\n      }).catch(() => {\n        ElMessage({\n          type: 'info',\n          message: '修改取消'\n        });\n      });\n    }\n\n  },\n\n  created() {\n    axios.get(\"http://localhost:8081/admin/edu\").then(res => {\n      this.collegeData = res.data.data;\n\n      for (let i in this.collegeData) {\n        //替换变量名,对应后端数据\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOId/g, \"id\"));\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorId/g, \"id\"));\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOName/g, \"name\"));\n        this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorName/g, \"name\"));\n      }\n    }).catch(error => {\n      alert('获取服务器信息失败');\n      console.dir(error);\n    });\n    console.log(this.collegeData[3]);\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ElMessage","ElMessageBox","axios","name","data","id","visible","defaultProps","children","label","collegeData","methods","appendCollege","majors","post","then","res","console","log","push","openAlter","catch","error","alert","dir","append","newChild","collegeName","alter","remove","node","parent","index","findIndex","d","splice","openRemove","confirm","confirmButtonText","cancelButtonText","type","delete","collegeId","message","majorId","alertMessage","prompt","value","response","status","created","get","i","JSON","parse","stringify","replace"],"sourceRoot":"","sources":["D:\\fdu\\software_engineering\\Lab\\5-Lab\\front_end\\src\\components\\MajorMaintenance.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <h2 style=\"margin-right:250px\">专业信息管理</h2>\r\n    <el-button type='primary' @click=\"appendCollege()\"> 新增学院 </el-button>\r\n    <el-tree\r\n      :data=\"this.collegeData\"\r\n    \r\n      default-expand-all\r\n      :props=\"this.defaultProps\" \r\n      :expand-on-click-node=\"false\"\r\n      class=\"el-tree-container\"\r\n    >\r\n      <template #default=\"{ node, data }\">\r\n        <span class=\"custom-tree-node\">\r\n          <span>{{ data.name }}</span>\r\n          <span>\r\n            <a v-if=\"data.majors\" @click=\"append(data)\"> 新增专业 </a>\r\n     \r\n            <a @click=\"openAlter(node, data)\"> 修改 </a>\r\n            <a @click=\"openRemove(node, data)\"> 删除 </a>\r\n          </span>\r\n        </span>\r\n      </template>\r\n    </el-tree>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'MajorMaintenance',\r\n  data() {\r\n    return { \r\n      id: 0,\r\n      visible: false,\r\n      defaultProps: {\r\n        children: 'majors',\r\n        label: 'name',\r\n      },\r\n      collegeData: []\r\n    }\r\n  },\r\n  methods: {\r\n    appendCollege() {\r\n      const data = {id: this.id++, name: '新的学院'+this.id, majors:[]}\r\n      \r\n      axios.post('http://localhost:8081/admin/edu/college/new',{name: data.name})\r\n        .then(res => {\r\n          console.log(res)\r\n          this.collegeData.push(data)\r\n          this.openAlter(data)\r\n        }).catch(error => {\r\n          alert(\"学院名称重复\")\r\n          console.dir(error);\r\n        });\r\n      \r\n    },\r\n    append(data) {\r\n      const newChild = { id: this.id++, name: '新的专业'+this.id}\r\n      if (!data.majors) {\r\n        data.majors = []\r\n      }\r\n      axios.post('http://localhost:8081/admin/edu/major/new',{collegeName: data.name, name: newChild.name})\r\n        .then(res => {\r\n          console.log(res)\r\n          data.majors.push(newChild)\r\n          this.openAlter(newChild)\r\n          this.collegeData = [...this.collegeData]//更新数据，刷新页面\r\n        }).catch(error => {\r\n          alert(\"专业名称重复\")\r\n          console.dir(error);\r\n        });\r\n      \r\n    },\r\n    alter(data, name) {\r\n      data.name=name;\r\n      //TODO:axios\r\n      this.collegeData = [...this.collegeData]\r\n    },\r\n    remove(node, data) {\r\n      //TODO:axios\r\n      const parent = node.parent\r\n      console.log(parent)\r\n      const children = parent.data.majors || parent.data\r\n      const index = children.findIndex((d) => d.id === data.id)\r\n      children.splice(index, 1)\r\n      this.collegeData = [...this.collegeData]\r\n    },\r\n    openRemove(node, data) {\r\n      ElMessageBox.confirm(\r\n        '是否删除 ' + data.name + (data.majors?\"\":\"专业\"),\r\n        'Warning',\r\n        {\r\n          confirmButtonText: '确认',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        }\r\n      )\r\n        .then(() => {\r\n          if(data.majors) { //修改学院\r\n            axios.delete('http://localhost:8081/admin/edu/college',{collegeId: data.id, name: data.name})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.remove(node, data)\r\n                ElMessage({type: 'success', message: `删除成功`})\r\n              }).catch(error => {\r\n                ElMessage.error('删除失败')\r\n                console.dir(error);\r\n              });\r\n          }\r\n          else {\r\n            axios.delete('http://localhost:8081/admin/edu/major',{majorId: data.id, name: data.name, collegeName: node.parent.name})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.remove(node, data)\r\n                ElMessage({type: 'success', message: `删除成功`})\r\n              }).catch(error => {\r\n                ElMessage.error('删除失败')\r\n                console.dir(error);\r\n              });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage({\r\n            type: 'info',\r\n            message: '删除取消',\r\n          })\r\n        })\r\n    },\r\n    openAlter(node, data) {\r\n      const alertMessage='请输入新的'+(data.majors?'学院':'专业')+'名称'\r\n      ElMessageBox.prompt(alertMessage, '修改', {\r\n        confirmButtonText: '确认',\r\n        cancelButtonText: '取消',\r\n      })\r\n        .then(({ value }) => {\r\n          if(data.majors) {//修改学院\r\n            axios.post('http://localhost:8081/admin/edu/college',{collegeId: data.id, name: value})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.alter(data, value)\r\n                ElMessage({type: 'success', message: `修改成功`})\r\n              }).catch(error => {\r\n                if(error.response.status == 426)\r\n                  ElMessage.error('学院名称重复')\r\n                console.dir(error);\r\n              });\r\n          }\r\n          else { //修改专业\r\n            axios.post('http://localhost:8081/admin/edu/major',{majorId: data.id, name: value, collegeName: node.parent.name})\r\n              .then(res => {\r\n                console.log(res)\r\n                this.alter(data, value)\r\n                ElMessage({type: 'success', message: `修改成功`})\r\n              }).catch(error => {\r\n                if(error.response.status == 426)\r\n                  ElMessage.error('专业名称重复')\r\n                console.dir(error);\r\n              });        \r\n          }\r\n        })\r\n        .catch(() => {\r\n          ElMessage({\r\n            type: 'info',\r\n            message: '修改取消',\r\n          })\r\n        })\r\n    }\r\n   \r\n  },\r\n  created() {\r\n    axios.get(\"http://localhost:8081/admin/edu\")\r\n      .then(res => {\r\n        this.collegeData = res.data.data\r\n        for(let i in this.collegeData) {//替换变量名,对应后端数据\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOId/g,\"id\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorId/g,\"id\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/collegeVOName/g,\"name\"))\r\n          this.collegeData[i] = JSON.parse(JSON.stringify(this.collegeData[i]).replace(/majorName/g,\"name\"))\r\n          \r\n        }\r\n      }).catch(error => {\r\n        alert('获取服务器信息失败')\r\n        console.dir(error);\r\n      });\r\n    console.log(this.collegeData[3])\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.el-tree-container{\r\n  width:600px;\r\n  margin-left: 150px;\r\n\r\n}\r\n.el-tree-node__expand-icon{\r\n  width:300px;\r\n  max-height: 12px;\r\n  margin-right:-140px;\r\n  transform: none !important;\r\n}\r\n.el-tree-node__expand-icon .expanded{\r\n  width:300px;\r\n  max-height: 12px;\r\n  transform: rotate(90deg);\r\n  margin-right:-150px;\r\n  position: relative;\r\n  transform: none !important;\r\n}\r\n.custom-tree-node {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 14px;\r\n  padding-right: 8px;  \r\n  font-size: 16px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}