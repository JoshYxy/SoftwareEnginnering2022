{"ast":null,"code":"import { createApp } from 'vue';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/dist/index.css';\nimport App from './App.vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport router from './router';\nimport store from './store'; // import Mock from 'mockjs'\n// require('./mock')\n\nconst app = createApp(App);\napp.use(VueAxios, axios);\napp.use(ElementPlus);\napp.use(store).use(router).mount('#app');\naxios.interceptors.request.use(config => {\n  /* 判断token是否存在和是否需要token验证的路由 */\n  let token = localStorage.getItem('Authorization') || '';\n  config.headers.token = token;\n  return config;\n});\n/* eslint-disable */\n\naxios.interceptors.response.use(response => {\n  return response;\n}, err => {\n  /*判断一下未授权 */\n  if (err.response.status == 401) alert(\"权限不足，无法访问\");\n  return Promise.reject(err);\n}); // 用来清空localStoreage 和 vuex里面的内容","map":{"version":3,"sources":["D:/desktop/5-Lab/front_end/src/main.js"],"names":["createApp","ElementPlus","App","axios","VueAxios","router","store","app","use","mount","interceptors","request","config","token","localStorage","getItem","headers","response","err","status","alert","Promise","reject"],"mappings":"AAAA,SAASA,SAAT,QAA0B,KAA1B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,6BAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;AACA;;AACA,MAAMC,GAAG,GAAGP,SAAS,CAACE,GAAD,CAArB;AACAK,GAAG,CAACC,GAAJ,CAAQJ,QAAR,EAAkBD,KAAlB;AACAI,GAAG,CAACC,GAAJ,CAAQP,WAAR;AACAM,GAAG,CAACC,GAAJ,CAAQF,KAAR,EAAeE,GAAf,CAAmBH,MAAnB,EAA2BI,KAA3B,CAAiC,MAAjC;AAEAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BH,GAA3B,CAA+BI,MAAM,IAAI;AACrC;AACA,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,KAAyC,EAArD;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAeH,KAAf,GAAuBA,KAAvB;AACA,SAAOD,MAAP;AACH,CALD;AAMA;;AACAT,KAAK,CAACO,YAAN,CAAmBO,QAAnB,CAA4BT,GAA5B,CAAgCS,QAAQ,IAAI;AACpC,SAAOA,QAAP;AACH,CAFL,EAEOC,GAAG,IAAG;AACL;AACA,MAAGA,GAAG,CAACD,QAAJ,CAAaE,MAAb,IAAuB,GAA1B,EAA+BC,KAAK,CAAC,WAAD,CAAL;AAC/B,SAAOC,OAAO,CAACC,MAAR,CAAeJ,GAAf,CAAP;AACH,CANL,E,CAQA","sourcesContent":["import { createApp } from 'vue'\r\nimport ElementPlus from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\nimport App from './App.vue'\r\nimport axios from 'axios'\r\nimport VueAxios from 'vue-axios'\r\nimport router from './router'\r\nimport store from './store'\r\n// import Mock from 'mockjs'\r\n// require('./mock')\r\nconst app = createApp(App)\r\napp.use(VueAxios, axios)\r\napp.use(ElementPlus)\r\napp.use(store).use(router).mount('#app')\r\n\r\naxios.interceptors.request.use(config => {\r\n    /* 判断token是否存在和是否需要token验证的路由 */\r\n    let token = localStorage.getItem('Authorization') || ''\r\n    config.headers.token = token;\r\n    return config;\r\n});\r\n/* eslint-disable */\r\naxios.interceptors.response.use(response => {\r\n        return response\r\n    }, err=> {\r\n        /*判断一下未授权 */\r\n        if(err.response.status == 401) alert(\"权限不足，无法访问\")\r\n        return Promise.reject(err)\r\n    });\r\n\r\n// 用来清空localStoreage 和 vuex里面的内容\r\n\r\n"]},"metadata":{},"sourceType":"module"}